<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context" xmlns:jdbc="http://www.springframework.org/schema/jdbc"
       xmlns:aop="http://www.springframework.org/schema/aop"
       xmlns:jee="http://www.springframework.org/schema/jee" xmlns:tx="http://www.springframework.org/schema/tx"
       xmlns:util="http://www.springframework.org/schema/util" xmlns:task="http://www.springframework.org/schema/task" xsi:schemaLocation="
		http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-4.0.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-4.0.xsd
		http://www.springframework.org/schema/jdbc http://www.springframework.org/schema/jdbc/spring-jdbc-4.0.xsd
		http://www.springframework.org/schema/jee http://www.springframework.org/schema/jee/spring-jee-4.0.xsd
		http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-4.0.xsd
		http://www.springframework.org/schema/util http://www.springframework.org/schema/util/spring-util-4.0.xsd
		http://www.springframework.org/schema/task http://www.springframework.org/schema/task/spring-task-4.0.xsd
		http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-4.0.xsd"
       default-lazy-init="true">

    <description>Spring Configuration</description>

    <context:property-placeholder ignore-unresolvable="true" location="classpath:config.properties" />

    <bean id="dataSource" class="com.mchange.v2.c3p0.ComboPooledDataSource">
        <property name="driverClass" value="${jdbc.dongruan.driverClassName}"/>
        <property name="jdbcUrl" value="${jdbc.dongruan.url}"/>
        <property name="user" value="${jdbc.dongruan.username}"/>
        <property name="password" value="${jdbc.dongruan.password}"/>
        <property name="maxIdleTime" value="${jdbc.maxIdleTime}"/>
        <property name="minPoolSize" value="${jdbc.minPoolSize}"/>
        <property name="initialPoolSize" value="${jdbc.initialPoolSize}"/>
        <property name="maxPoolSize" value="${jdbc.maxPoolSize}"/>
    </bean>

 <!--中间表数据库  -->
	<bean id="zhongjianDataSource" class="com.mchange.v2.c3p0.ComboPooledDataSource">
        <property name="driverClass" value="${jdbc.zhongjian.driverClassName}"/>
        <property name="jdbcUrl" value="${jdbc.zhongjian.url}"/>
        <property name="user" value="${jdbc.zhongjian.username}"/>
        <property name="password" value="${jdbc.zhongjian.password}"/>
        <property name="maxIdleTime" value="${jdbc.maxIdleTime}"/>
        <property name="minPoolSize" value="${jdbc.minPoolSize}"/>
        <property name="initialPoolSize" value="${jdbc.initialPoolSize}"/>
        <property name="maxPoolSize" value="${jdbc.maxPoolSize}"/>
    </bean>
    


    <!--东软认证信息数据库-->
    <bean id="drDataSource" class="com.mchange.v2.c3p0.ComboPooledDataSource">
        <property name="driverClass" value="${jdbc.drface.driverClassName}"/>
        <property name="jdbcUrl" value="${jdbc.drface.url}"/>
        <property name="user" value="${jdbc.drface.username}"/>
        <property name="password" value="${jdbc.drface.password}"/>
        <property name="maxIdleTime" value="${jdbc.maxIdleTime}"/>
        <property name="minPoolSize" value="${jdbc.minPoolSize}"/>
        <property name="initialPoolSize" value="${jdbc.initialPoolSize}"/>
        <property name="maxPoolSize" value="${jdbc.maxPoolSize}"/>
    </bean>

    <!--孝感用户认证基础信息数据库-->
    <bean id="faceDataSource" class="com.mchange.v2.c3p0.ComboPooledDataSource">
        <property name="driverClass" value="${jdbc.face.driverClassName}"/>
        <property name="jdbcUrl" value="${jdbc.face.url}"/>
        <property name="user" value="${jdbc.face.username}"/>
        <property name="password" value="${jdbc.face.password}"/>
        <property name="maxIdleTime" value="${jdbc.maxIdleTime}"/>
        <property name="minPoolSize" value="${jdbc.minPoolSize}"/>
        <property name="initialPoolSize" value="${jdbc.initialPoolSize}"/>
        <property name="maxPoolSize" value="${jdbc.maxPoolSize}"/>
    </bean>

    <!--cssp补换卡系统数据库-->
    <bean id="csspDataSource" class="com.mchange.v2.c3p0.ComboPooledDataSource">
        <property name="driverClass" value="${jdbc.cssp.driverClassName}"/>
        <property name="jdbcUrl" value="${jdbc.cssp.url}"/>
        <property name="user" value="${jdbc.cssp.username}"/>
        <property name="password" value="${jdbc.cssp.password}"/>
        <property name="maxIdleTime" value="${jdbc.maxIdleTime}"/>
        <property name="minPoolSize" value="${jdbc.minPoolSize}"/>
        <property name="initialPoolSize" value="${jdbc.initialPoolSize}"/>
        <property name="maxPoolSize" value="${jdbc.maxPoolSize}"/>
    </bean>

    <!-- sisp_public 获取社保网点 和社保银行网点时用到-->
    <bean id="sispPublicDataSource" class="com.mchange.v2.c3p0.ComboPooledDataSource">
        <property name="driverClass" value="${jdbc.sisp_public.driverClassName}"/>
        <property name="jdbcUrl" value="${jdbc.sisp_public.url}"/>
        <property name="user" value="${jdbc.sisp_public.username}"/>
        <property name="password" value="${jdbc.sisp_public.password}"/>
        <property name="maxIdleTime" value="${jdbc.maxIdleTime}"/>
        <property name="minPoolSize" value="${jdbc.minPoolSize}"/>
        <property name="initialPoolSize" value="${jdbc.initialPoolSize}"/>
        <property name="maxPoolSize" value="${jdbc.maxPoolSize}"/>
    </bean>
    
    <!-- dryldy 获取养老待遇个性化测算-->
    <bean id="dryldyDataSource" class="com.mchange.v2.c3p0.ComboPooledDataSource">
        <property name="driverClass" value="${jdbc.dryldy.driverClassName}"/>
        <property name="jdbcUrl" value="${jdbc.dryldy.url}"/>
        <property name="user" value="${jdbc.dryldy.username}"/>
        <property name="password" value="${jdbc.dryldy.password}"/>
        <property name="maxIdleTime" value="${jdbc.maxIdleTime}"/>
        <property name="minPoolSize" value="${jdbc.minPoolSize}"/>
        <property name="initialPoolSize" value="${jdbc.initialPoolSize}"/>
        <property name="maxPoolSize" value="${jdbc.maxPoolSize}"/>
    </bean>
    
         <bean id="netportalDataSource" class="com.mchange.v2.c3p0.ComboPooledDataSource">
        <property name="driverClass" value="${jdbc.sisp.driverClassName}"/>
        <property name="jdbcUrl" value="${jdbc.sisp.url}"/>
        <property name="user" value="${jdbc.sisp.username}"/>
        <property name="password" value="${jdbc.sisp.password}"/>
        <property name="maxIdleTime" value="${jdbc.maxIdleTime}"/>
        <property name="minPoolSize" value="${jdbc.minPoolSize}"/>
        <property name="initialPoolSize" value="${jdbc.initialPoolSize}"/>
        <property name="maxPoolSize" value="${jdbc.maxPoolSize}"/>
    </bean>

    <!-- 创建SqlSessionFactory，同时指定数据源和mapper -->
    <bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
        <property name="dataSource" ref="dataSource" />
        <property name="mapperLocations" value="classpath:/mappings/SecQueryDAO.xml"/>
        <property name="configLocation" value="classpath:/config/mybatis-config.xml"></property>
    </bean>


	
    <bean id="netSqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
        <property name="dataSource" ref="netportalDataSource" />
        <property name="mapperLocations" value="classpath:/mappings/Net*.xml"/>
        <property name="configLocation" value="classpath:/config/mybatis-config.xml"></property>
    </bean>

    <bean id="drSqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
        <property name="dataSource" ref="drDataSource" />
        <property name="mapperLocations" value="classpath:/mappings/DR*.xml"/>
        <property name="configLocation" value="classpath:/config/mybatis-config.xml"></property>
    </bean>
    
    <bean id="dryldySqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
        <property name="dataSource" ref="dryldyDataSource" />
        <property name="mapperLocations" value="classpath:/mappings/dryldygxhcsDao.xml"/>
        <property name="configLocation" value="classpath:/config/mybatis-config.xml"></property>
    </bean>

    <bean id="faceSqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
        <property name="dataSource" ref="faceDataSource" />
        <property name="mapperLocations" value="classpath:/mappings/XG*.xml"/>
        <property name="configLocation" value="classpath:/config/mybatis-config.xml"></property>
    </bean>

    <bean id="csspSqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
        <property name="dataSource" ref="csspDataSource" />
        <property name="mapperLocations" value="classpath:/mappings/CsspQueryDAO.xml"/>
        <property name="configLocation" value="classpath:/config/mybatis-config.xml"></property>
    </bean>

    <bean id="sispPublicSqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
        <property name="dataSource" ref="sispPublicDataSource" />
        <property name="mapperLocations" value="classpath:/mappings/sispPublicQueryDAO.xml"/>
        <property name="configLocation" value="classpath:/config/mybatis-config.xml"></property>
    </bean>
    
    <!--中间库-->
		<bean id="zjsqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
        <property name="dataSource" ref="zhongjianDataSource" />
        <property name="mapperLocations" value="classpath:/mappings/ZhongJianDAO.xml"/>
        <property name="configLocation" value="classpath:/config/mybatis-config.xml"></property>
    </bean>
    

    
	
	
		
	    <!-- 扫描basePackage下所有以@MyBatisDao注解的接口 -->
    <bean id="mapperScannerConfigurer0" class="org.mybatis.spring.mapper.MapperScannerConfigurer">
        <property name="sqlSessionFactoryBeanName" value="netSqlSessionFactory" />
        <property name="basePackage" value="com.tecsun.sisp.iface.server.model.dao_net"/>
        <property name="annotationClass" value="com.tecsun.sisp.iface.server.util.MyBatisDao"/>
    </bean>
    
    <bean id="sqlSession" class="org.mybatis.spring.SqlSessionTemplate">
        <constructor-arg index="0" ref="netSqlSessionFactory" />
    </bean>
    


    <!-- 扫描basePackage下所有以@MyBatisDao注解的接口 -->
    <bean id="mapperScannerConfigurer" class="org.mybatis.spring.mapper.MapperScannerConfigurer">
        <property name="sqlSessionFactoryBeanName" value="sqlSessionFactory" />
        <property name="basePackage" value="com.tecsun.sisp.iface.server.model.dao"/>
        <property name="annotationClass" value="com.tecsun.sisp.iface.server.util.MyBatisDao"/>
    </bean>

    <!-- 东软认证数据库 扫描basePackage下所有以@MyBatisDao注解的接口 -->
    <bean id="mapperScannerConfigurer2" class="org.mybatis.spring.mapper.MapperScannerConfigurer">
        <property name="sqlSessionFactoryBeanName" value="drSqlSessionFactory" />
        <property name="basePackage" value="com.tecsun.sisp.iface.server.model.dao_dr"/>
        <property name="annotationClass" value="com.tecsun.sisp.iface.server.util.MyBatisDao"/>
    </bean>
    
    <bean id="mapperScannerConfigurer21" class="org.mybatis.spring.mapper.MapperScannerConfigurer">
        <property name="sqlSessionFactoryBeanName" value="dryldySqlSessionFactory" />
        <property name="basePackage" value="com.tecsun.sisp.iface.server.model.dao_yldygxhcs"/>
        <property name="annotationClass" value="com.tecsun.sisp.iface.server.util.MyBatisDao"/>
    </bean>

    <!-- 孝感认证数据库 扫描basePackage下所有以@MyBatisDao注解的接口 -->
    <bean id="mapperScannerConfigurer3" class="org.mybatis.spring.mapper.MapperScannerConfigurer">
        <property name="sqlSessionFactoryBeanName" value="faceSqlSessionFactory" />
        <property name="basePackage" value="com.tecsun.sisp.iface.server.model.dao_xg"/>
        <property name="annotationClass" value="com.tecsun.sisp.iface.server.util.MyBatisDao"/>
    </bean>

    <!-- cssp卡管系统数据库 扫描basePackage下所有以@MyBatisDao注解的接口 -->
    <bean id="mapperScannerConfigurer4" class="org.mybatis.spring.mapper.MapperScannerConfigurer">
        <property name="sqlSessionFactoryBeanName" value="csspSqlSessionFactory" />
        <property name="basePackage" value="com.tecsun.sisp.iface.server.model.dao_cssp"/>
        <property name="annotationClass" value="com.tecsun.sisp.iface.server.util.MyBatisDao"/>
    </bean>

	<!--中间库系统数据库扫描basePackage  -->
	 <bean id="mapperScannerConfigurer6" class="org.mybatis.spring.mapper.MapperScannerConfigurer">
        <property name="sqlSessionFactoryBeanName" value="zjsqlSessionFactory" />
        <property name="basePackage" value="com.tecsun.sisp.iface.server.model.dao_zj"/>
        <property name="annotationClass" value="com.tecsun.sisp.iface.server.util.MyBatisDao"/>
    </bean>
    
    <!-- sisp_public 数据库 扫描basePackage下所有以@MyBatisDao注解的接口 -->
    <bean id="mapperScannerConfigurer5" class="org.mybatis.spring.mapper.MapperScannerConfigurer">
        <property name="sqlSessionFactoryBeanName" value="sispPublicSqlSessionFactory" />
        <property name="basePackage" value="com.tecsun.sisp.iface.server.model.dao_sisp_public"/>
        <property name="annotationClass" value="com.tecsun.sisp.iface.server.util.MyBatisDao"/>
    </bean>
   
    

    <context:component-scan base-package="com.tecsun.sisp.iface.server.model">
        <!--<context:exclude-filter type="annotation" expression="org.springframework.stereotype.Controller"/>-->
    </context:component-scan>
    
    <aop:aspectj-autoproxy proxy-target-class="true"/>
    
    <tx:annotation-driven/>

    <bean id="trans_1" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
        <property name="dataSource" ref="dataSource"/>
        <qualifier value="deshengbao"/>
    </bean>

    <bean id="trans_2" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
        <property name="dataSource" ref="netportalDataSource"/>
        <qualifier value="net"/>
    </bean>

    <bean id="trans_3" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
        <property name="dataSource" ref="drDataSource"/>
    </bean>

    <bean id="trans_4" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
        <property name="dataSource" ref="faceDataSource"/>
    </bean>

    <bean id="trans_5" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
        <property name="dataSource" ref="csspDataSource"/>
    </bean>

    <bean id="trans_6" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
        <property name="dataSource" ref="sispPublicDataSource"/>
    </bean>

    
    <!-- 中间表库 -->
    <bean id="trans_7" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
        <property name="dataSource" ref="zhongjianDataSource"/>
    </bean>


    <!--spring 事务配置-->
    <!--<bean id="transactionManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">-->
    <!--<property name="dataSource" ref="dataSource"/>-->
    <!--</bean>-->
    <!--<tx:annotation-driven transaction-manager="transactionManager"/>-->
    <!--配置事务传播特性-->
    <!--<tx:advice id="transViewAdvice" transaction-manager="transactionManager">-->
    <!--<tx:attributes>-->
    <!--<tx:method name="*" propagation="REQUIRED"/>-->
    <!--</tx:attributes>-->
    <!--</tx:advice>-->
    <!--配置参与事务的类-->
    <!--<aop:config>-->
    <!--<aop:pointcut id="transServicePointcut" expression="execution(* com.tecsun.sisp.iface.modules.service.impl..*(..))"/>-->
    <!--<aop:advisor pointcut-ref="transServicePointcut" advice-ref="transViewAdvice"/>-->
    <!--</aop:config>-->
    <!-- 验证码配置 -->
    <bean id="captchaProducer" class="com.google.code.kaptcha.impl.DefaultKaptcha">
        <property name="config">
            <bean class="com.google.code.kaptcha.util.Config">
                <constructor-arg>
                    <props>
                        <prop key="kaptcha.border">yes</prop>
                        <prop key="kaptcha.textproducer.font.color">blue</prop>
                        <prop key="kaptcha.image.width">75</prop>
                        <prop key="kaptcha.textproducer.font.size">26</prop>
                        <prop key="kaptcha.textproducer.char.string">1234567890</prop>
                        <prop key="kaptcha.image.height">40</prop>
                        <prop key="kaptcha.session.key">code</prop>
                        <prop key="kaptcha.textproducer.char.space">3</prop>
                        <prop key="kaptcha.textproducer.char.length">4</prop>
                        <prop key="kaptcha.noise.impl">com.google.code.kaptcha.impl.NoNoise</prop>
                        <prop key="kaptcha.background.clear.to">white</prop>
                        <prop key="kaptcha.textproducer.font.names">楷体</prop>
                        <prop key="kaptcha.obscurificator.impl">com.google.code.kaptcha.impl.ShadowGimpy</prop>
                    </props>
                </constructor-arg>
            </bean>
        </property>
    </bean>
</beans>